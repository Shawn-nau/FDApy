.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_example_cd4.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_example_cd4.py:


CD4 cell count analysis
=======================

This notebook shows how to deal with irregular functional data by analyzing the
dataset CD4 cell count.


.. code-block:: default


    # Author: Steven Golovkine <steven_golovkine@icloud.com>
    # License: MIT

    # shinx_gallery_thumbnail_number = 2

    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    from FDApy.irregular_functional import IrregularFunctionalData
    from FDApy.plot import plot


Load the data into Pandas dataframe


.. code-block:: default

    cd4 = pd.read_csv('./data/cd4.csv', index_col=0)



Create IrregularFunctionalData for cd4 data


.. code-block:: default


    all_argvals = cd4.columns.astype(np.int64)
    argvals = [np.array(all_argvals[~np.isnan(row)]) for row in cd4.values]
    values = [row[~np.isnan(row)] for row in cd4.values]
    cd4counts = IrregularFunctionalData(argvals, values)


Print out an Irregular Functional data object


.. code-block:: default


    # Print irregular functional data
    print(cd4counts)


The attributs of the classes can easily be accessed.


.. code-block:: default


    # Accessing the argvals of the object
    print(cd4counts.argvals[0:5])

    # Accessing the values of the object
    print(cd4counts.values[0:5])

    # Get the number of observations for the object
    cd4counts.nObs()

    # Retrieve the number of sampling points for the object
    cd4counts.nObsPoint()[0:5]

    # Get the dimension of the domain of the observations
    cd4counts.dimension()


The extraction of observations is also easily done.


.. code-block:: default


    # Extract observations from the object
    print(cd4counts[5:8])


Finally, we can plot the data.


.. code-block:: default


    fig, ax = plot(cd4counts,
                   main='CD4 cell counts',
                   xlab='Month since seroconversion',
                   ylab='CD4 cell count (log-scale)')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_example_cd4.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_cd4.py <example_cd4.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_cd4.ipynb <example_cd4.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
